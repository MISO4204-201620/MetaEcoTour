# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                               controllers.Application.index()
GET         /login                          controllers.Application.login()
GET         /catalog                        controllers.Application.catalog()
GET         /cpaqser                        controllers.Application.creapaqser()
GET         /crudproviders                  controllers.Application.crudproviders()
GET         /crudclients                    controllers.Application.crudclients()
GET         /paqser                         controllers.Application.paqser()
GET         /preguntas                      controllers.Application.preguntas()
GET         /shopping                       controllers.Application.shoppingCar()

#Servicios de los comentarios:
POST        /api/comentarios/               controllers.implementacion.mensajerias.ComentariosController.save()
GET         /api/comentarios/:usuarioId     controllers.implementacion.mensajerias.ComentariosController.getComentariosByIdUsuario(usuarioId: Long)
GET         /api/comentarios/:productoId/:numPagina/:tipo    controllers.implementacion.mensajerias.ComentariosController.getComentariosByIdProductoAndType(productoId: Long, numPagina: Integer, tipo: String)
GET         /api/subcomentarios/:id         controllers.implementacion.mensajerias.ComentariosController.getSubComentarios(id: Long)
DELETE      /api/comentarios/:id            controllers.implementacion.mensajerias.ComentariosController.delete(id: Long)
GET         /api/subcomentario/:id         controllers.implementacion.mensajerias.ComentariosController.getComentariosByPadre(id: Long)

#servicios de las categorias:
GET         /api/categorias/                controllers.implementacion.catalogos.CategoriasController.getCategorias()
POST        /api/categorias/                controllers.implementacion.catalogos.CategoriasController.save()
DELETE      /api/categorias/:id             controllers.implementacion.catalogos.CategoriasController.delete(id: String)

#servicios asociados a los productos:
GET         /api/productos/                 controllers.implementacion.catalogos.ProductosController.getProductos()
GET         /api/productos/:productType     controllers.implementacion.catalogos.ProductosController.getProductosByType(productType: String)
GET         /api/producto/:productId        controllers.implementacion.catalogos.ProductosController.getProductById(productId: Long)
GET         /api/producto/numpage/:numPagina/:productType        controllers.implementacion.catalogos.ProductosController.getProductosByPageByType(numPagina: Integer, productType: String)
GET         /api/producto/numpage/:numPagina/:productType/:categoriaId        controllers.implementacion.catalogos.ProductosController.getProductosByPageByTypeAndCategory(numPagina: Integer, productType: String, categoriaId: Long)
POST        /api/productos/                 controllers.implementacion.catalogos.ProductosController.save()
DELETE      /api/productos/:id              controllers.implementacion.catalogos.ProductosController.delete(id: Long)
GET         /api/itemServ/pqt/:idPaquete    controllers.implementacion.catalogos.ItemServiciosController.getServicioByPaquetes(idPaquete:Long)
GET         /api/itemServ/items/:idPaquete    controllers.implementacion.catalogos.ItemServiciosController.getItemsByPaquetes(idPaquete:Long)
GET         /api/producto/proveedor/:idProveedor    controllers.implementacion.catalogos.ProductosController.getProductsByProveedorId(idProveedor: Long)
POST        /api/itemServ/crear/    controllers.implementacion.catalogos.ItemServiciosController.save()
DELETE      /api/itemServ/delete/:idItem    controllers.implementacion.catalogos.ItemServiciosController.delete(idItem:Long)

GET         /api/producto/atr/:productId    controllers.implementacion.catalogos.ProductosController.getAttributeByProductId(productId: Long)
POST        /api/producto/atr/add/          controllers.implementacion.catalogos.ProductosController.addAtributo()
POST        /api/producto/atr/rmv/          controllers.implementacion.catalogos.ProductosController.removeAtributo()

#productos by filters
GET  /api/productos/numpage/:numPage/name/:name/inicial/:precioInicial/final/:precioFinal/type/:productType         controllers.implementacion.catalogos.ProductosController.getProductosByPageByFilters(numPage : Integer,name : String,precioInicial : Double ,precioFinal : Double ,productType : String)


#Servicios asociados a los recursos:
GET         /api/recursos/:productId/:tipo          controllers.implementacion.catalogos.RecursosController.getRecursosByProd(productId: Long, tipo : Long)
GET         /api/recursos/:productId/:tipo          controllers.implementacion.catalogos.RecursosController.getRecursosByProdByType(productId: Long,tipo : String)
POST        /api/recursos/                          controllers.implementacion.catalogos.RecursosController.save()
DELETE      /api/recursos/:id                       controllers.implementacion.catalogos.RecursosController.delete(id: String)

#Servicios de Compras:
GET         /api/compras/:idCompra			controllers.implementacion.compras.ComprasController.getCompra(idCompra:Long)
GET         /api/compras/usr/:idUsuario		controllers.implementacion.compras.ComprasController.getCompraActivaByUsuario(idUsuario:Long)
GET         /api/compras/usr/all/:idUsuario	controllers.implementacion.compras.ComprasController.getComprasByUsuario(idUsuario:Long)
GET         /api/compras/itm/:idCompra		controllers.implementacion.compras.ComprasController.getItemsCompra(idCompra:Long)

POST        /api/compras/save/             controllers.implementacion.compras.ComprasController.save()
POST        /api/compras/add/              controllers.implementacion.compras.ComprasController.addItemsCompra()
POST        /api/compras/remove/           controllers.implementacion.compras.ComprasController.removeItemsCompra()

POST        /api/compras/pagar/           controllers.implementacion.compras.TransaccionesController.pagarCompra()


# Servicios para consultar las busquedas o guardar la busqueda del producto
GET         /api/busqueda/                  controllers.implementacion.catalogos.BusquedasController.getBusquedas()
GET         /api/busqueda/:productId        controllers.implementacion.catalogos.BusquedasController.getBusquedasByProductId(productId:Long)
POST        /api/busqueda/           controllers.implementacion.catalogos.BusquedasController.save()

#Servicios Asociados a las calificaciones:
GET         /api/calificacion/usr/:usuarioId        controllers.implementacion.compras.CalificacionesController.getCalificaionesByUsuario(usuarioId:Long)
GET         /api/calificacion/prd/:productId        controllers.implementacion.compras.CalificacionesController.getCalificaionesByServicio(productId:Long)
POST        /api/calificacion/                      controllers.implementacion.compras.CalificacionesController.save()

#Servicios asociados al CRUD de usuarios o proveedores

POST        /api/usuarios/crear                       controllers.implementacion.usuarios.UsuariosController.crearUsuario()
GET        /api/usuarios/:numPage/:userType           controllers.implementacion.usuarios.UsuariosController.getUsuariosByPageByType(numPage : Integer,userType : String)
GET        /api/usuarios/:userType                    controllers.implementacion.usuarios.UsuariosController.getUsuariosByType(userType : String)
GET        /api/usuarios/userId/:userId/:typeOperation          controllers.implementacion.usuarios.UsuariosController.getUsuarioById(userId : Long,typeOperation : Long)
DELETE     /api/usuarios/borrar/:userId                 controllers.implementacion.usuarios.UsuariosController.deleteUserById(userId : Long)
GET        /api/usuario/cuentaExterno                  controllers.implementacion.usuarios.UsuariosController.getCuentaExterno()


#Servicios iniciales para la carga de datos... creo que ya no son necesarios
GET        /api/recursos/loadServ/          devUtils.LoadData.loadServiciosTest()
GET        /api/recursos/loadPaqu/          devUtils.LoadData.loadPaquetesTest()

POST        /login                          controllers.implementacion.usuarios.SecurityController.login()
POST        /logout                         controllers.implementacion.usuarios.SecurityController.logout()

# Map static resources from the /public folder to the /assets URL path
GET         /*file                          controllers.Assets.versioned(path="/public", file: Asset)
